{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/benjamin/School/Perfiction/Frontend/perfiction/src/model/SignUp.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    .navbar {\\n        background-color: rgba(0,0,0,0.9);\\n    }\\n\\n    .navbar-default, .collapsed {\\n        border-color: white;\\n        background-color: white;\\n      }\\n      \\n      .navbar-default, .toggle{\\n       background-color: white;\\n      }\\n\\n    .navbar-brand, .navbar-nav .nav-link  {\\n        color white;\\n        margin: 2vh 2vw 2vh 2vw;\\n\\n        &:hover {\\n            color: #690505;\\n        }\\n    }\\n\\n    .nav-item {\\n      color white;\\n      margin: 2vh 2vw 2vh 2vw;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport axios from 'axios'; //import userService from '../services/accounts';\n\nimport styled from 'styled-components';\nconst Styles = styled.div(_templateObject());\n/*let userArray = [\n  {\n    firstName: 'Benjamin',\n    lastName: 'Bow',\n    email: 'boy@com',\n    password: 'benjambo'\n  }\n];*/\n// Function to validate if input is acceptable\n\n/*const formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate form if it isn't filled out\n  Object.values(rest).forEach(val => {\n    val === '' && (valid = false);\n  });\n\n  return valid;\n};*/\n// An email validation code\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props); // The state of the form to begin with\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //const data = new FormData(event.target);\n      // If the format is valid print this to Console\n\n      if (this.state) {\n        /*console.log(`\n              --SUBMITTING--\n              First Name: ${this.state.firstName}\n              Last Name: ${this.state.lastName}\n              Email: ${this.state.email}\n              Password: ${this.state.password}\n              `);*/\n\n        /*const { users } = this.state;\n        this.setState({\n          users: [...users]\n        });\n         users.push({\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        });*/\n\n        /*fetch('/signup', {\n          method: 'POST',\n          body: \n        });*/\n        axios.post('/signup', this.state).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n        console.log(this.state);\n        /*userService\n          .create({\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n          })\n          .then(createdUser => {\n            users.concat(createdUser);\n          });*/\n\n        /*auth.login(() => {\n          this.props.history.push('/home');\n        });*/\n      } else {\n        console.log('INVALID FORM - ERROR MESSAGE');\n      }\n    };\n\n    this.handleChange = event => {\n      // Swith statement for form input rules\n\n      /*switch (name) {\n        case 'firstName':\n          formErrors.firstName =\n            value.length < 2 ? 'minimum 2 characters required' : '';\n          break;\n         case 'lastName':\n          formErrors.lastName =\n            value.length < 2 ? 'minimum 2 characters required' : '';\n          break;\n         case 'email':\n          formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n          break;\n         case 'password':\n          formErrors.password =\n            value.length < 6 ? 'minimum 6 characters required' : '';\n          break;\n        default:\n          break;\n      }*/\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      /*, () => console.log(this.state));*/\n    };\n\n    this.state = {\n      //users: userArray,\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n      /*formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }*/\n\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  } // Fetch the user on first mount\n\n  /*componentDidMount() {\n    this.getUser();\n  }\n   // Retrieves the array of users from the Express app\n  getUser = () => {\n    fetch('/api/getUser')\n      .then(res => res.json())\n      .then(users => this.setState({ users }));\n  };*/\n  // The submit handler\n\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          email = _this$state.email,\n          password = _this$state.password; //const { users } = this.state;\n\n    return React.createElement(\"form\", {\n      action: \"/signup\",\n      className: \"forms\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      value: firstName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), \")}\"), React.createElement(\"div\", {\n      className: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      value: lastName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), \")}\"), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Already Have an Account?\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/benjamin/School/Perfiction/Frontend/perfiction/src/model/SignUp.js"],"names":["React","Component","Spring","Nav","Navbar","auth","axios","styled","Styles","div","emailRegex","RegExp","SignUp","constructor","props","handleSubmit","event","preventDefault","state","post","then","res","console","log","catch","err","handleChange","setState","target","name","value","firstName","lastName","email","password","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport axios from 'axios';\n//import userService from '../services/accounts';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n\n        &:hover {\n            color: #690505;\n        }\n    }\n\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    `;\n\n/*let userArray = [\n  {\n    firstName: 'Benjamin',\n    lastName: 'Bow',\n    email: 'boy@com',\n    password: 'benjambo'\n  }\n];*/\n\n// Function to validate if input is acceptable\n/*const formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate form if it isn't filled out\n  Object.values(rest).forEach(val => {\n    val === '' && (valid = false);\n  });\n\n  return valid;\n};*/\n\n// An email validation code\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    // The state of the form to begin with\n    this.state = {\n      //users: userArray,\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n      /*formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }*/\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Fetch the user on first mount\n  /*componentDidMount() {\n    this.getUser();\n  }\n\n  // Retrieves the array of users from the Express app\n  getUser = () => {\n    fetch('/api/getUser')\n      .then(res => res.json())\n      .then(users => this.setState({ users }));\n  };*/\n\n  // The submit handler\n  handleSubmit = event => {\n    event.preventDefault();\n    //const data = new FormData(event.target);\n\n    // If the format is valid print this to Console\n    if (this.state) {\n      /*console.log(`\n            --SUBMITTING--\n            First Name: ${this.state.firstName}\n            Last Name: ${this.state.lastName}\n            Email: ${this.state.email}\n            Password: ${this.state.password}\n            `);*/\n\n      /*const { users } = this.state;\n      this.setState({\n        users: [...users]\n      });\n\n      users.push({\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password\n      });*/\n\n      /*fetch('/signup', {\n        method: 'POST',\n        body: \n      });*/\n\n      axios\n        .post('/signup', this.state)\n        .then(res => {\n          console.log(res);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n\n      console.log(this.state);\n      /*userService\n        .create({\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        })\n        .then(createdUser => {\n          users.concat(createdUser);\n        });*/\n\n      /*auth.login(() => {\n        this.props.history.push('/home');\n      });*/\n    } else {\n      console.log('INVALID FORM - ERROR MESSAGE');\n    }\n  };\n\n  // The Change handler\n  handleChange = event => {\n    // Swith statement for form input rules\n    /*switch (name) {\n      case 'firstName':\n        formErrors.firstName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'lastName':\n        formErrors.lastName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n        break;\n\n      case 'password':\n        formErrors.password =\n          value.length < 6 ? 'minimum 6 characters required' : '';\n        break;\n      default:\n        break;\n    }*/\n\n    this.setState({ [event.target.name]: event.target.value });\n    /*, () => console.log(this.state));*/\n  };\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const { firstName, lastName, email, password /*formErrors*/ } = this.state;\n    //const { users } = this.state;\n\n    return (\n      <form action=\"/signup\" className=\"forms\" onSubmit={this.handleSubmit}>\n        <div className=\"firstName\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            placeholder=\"First Name\"\n            type=\"text\"\n            name=\"firstName\"\n            value={firstName}\n            onChange={this.handleChange}\n          />\n          )}\n        </div>\n        <div className=\"lastName\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            placeholder=\"Last Name\"\n            type=\"text\"\n            name=\"lastName\"\n            value={lastName}\n            onChange={this.handleChange}\n          />\n          )}\n        </div>\n        <div className=\"email\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            placeholder=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"password\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            placeholder=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"createAccount\">\n          <button type=\"submit\">Create Account</button>\n          <a href=\"/\">\n            <small>Already Have an Account?</small>\n          </a>\n        </div>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}