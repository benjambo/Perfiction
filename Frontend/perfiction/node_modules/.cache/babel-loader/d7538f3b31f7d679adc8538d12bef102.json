{"ast":null,"code":"import _slicedToArray from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/benjamin/School/Perfiction/Frontend/perfiction/src/model/SignUp.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    .navbar {\\n        background-color: rgba(0,0,0,0.9);\\n    }\\n\\n    .navbar-default, .collapsed {\\n        border-color: white;\\n        background-color: white;\\n      }\\n      \\n      .navbar-default, .toggle{\\n       background-color: white;\\n      }\\n\\n    .navbar-brand, .navbar-nav .nav-link  {\\n        color white;\\n        margin: 2vh 2vw 2vh 2vw;\\n\\n        &:hover {\\n            color: #690505;\\n        }\\n    }\\n\\n    .nav-item {\\n      color white;\\n      margin: 2vh 2vw 2vh 2vw;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport userService from '../services/accounts';\nimport styled from 'styled-components';\nconst Styles = styled.div(_templateObject());\nlet users = [{\n  firstName: 'Benjamin',\n  lastName: 'Bow',\n  email: 'boy@com',\n  password: 'benjambo'\n}]; // Function to validate if input is acceptable\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; // Validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // Validate form if it isn't filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n}; // An email validation code\n\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport const SignUp = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fname = _useState4[0],\n        setFname = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        lname = _useState6[0],\n        setLname = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        password = _useState10[0],\n        setPassword = _useState10[1];\n\n  useEffect(() => {\n    userService.getAll().then(data => {\n      setUsers(data);\n    });\n  }, []); // The submit handler\n\n  const handleSubmit = event => {\n    event.preventDefault(); // If the format is valid print this to Console\n\n    if (formValid(this.state)) {\n      console.log(\"\\n            --SUBMITTING--\\n            First Name: \".concat(props.firstName, \"\\n            Last Name: \").concat(props.lastName, \"\\n            Email: \").concat(props.email, \"\\n            Password: \").concat(props.password, \"\\n            \"));\n      userService.create({\n        firstName: props.firstName,\n        lastName: props.lastName,\n        email: props.email,\n        password: props.password\n      }).then(createdUser => {\n        users.concat(createdUser);\n      });\n      auth.login(() => {\n        this.props.history.push('/home');\n      });\n    } else {\n      console.log('INVALID FORM - ERROR MESSAGE');\n    }\n\n    return;\n  }; // The Change handler\n\n\n  const handleChange = event => {\n    event.preventDefault();\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    let formErrors = props.formErrors; // Swith statement for form input rules\n\n    switch (name) {\n      case 'firstName':\n        props.formErrors.firstName = value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'lastName':\n        props.formErrors.lastName = value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'email':\n        props.formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n        break;\n\n      case 'password':\n        props.formErrors.password = value.length < 6 ? 'minimum 6 characters required' : '';\n        break;\n\n      default:\n        break;\n    } // setUsers({ formErrors, [name]: value }, () => console.log(this.state));\n\n  };\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    expand: \"lg\",\n    fixed: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Perfiction\"), React.createElement(Navbar.Toggle, {\n    \"area-controls\": \"basic-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"ml-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Nav.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Welcome to Perfiction\")))), React.createElement(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    config: {\n      duration: 1250\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, props => React.createElement(\"div\", {\n    style: props,\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Create Account\"), React.createElement(\"form\", {\n    className: \"forms\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    className: users.formErrors.firstName.length > 0 ? 'error' : null,\n    placeholder: \"First Name\",\n    type: \"text\",\n    name: \"firstName\",\n    noValidate: true,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), users.formErrors.firstName.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, users.formErrors.firstName)), React.createElement(\"div\", {\n    className: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    className: \"\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    name: \"lastName\",\n    noValidate: true,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), users.formErrors.lastName.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, users.formErrors.lastName)), React.createElement(\"div\", {\n    className: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    className: \"\",\n    placeholder: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    noValidate: true,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), users.formErrors.email.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, users.formErrors.email)), React.createElement(\"div\", {\n    className: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"\",\n    placeholder: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    noValidate: true,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), users.formErrors.password.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, users.formErrors.password)), React.createElement(\"div\", {\n    className: \"createAccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Create Account\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Already Have an Account?\"))))))));\n};\n/*export class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    // The state of the form to begin with\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    userService.getAll().then(initialUsers => {\n      users = initialUsers;\n      this.state({ users });\n    });\n  }\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const { formErrors } = this.state;\n\n  }\n}*/","map":{"version":3,"sources":["/Users/benjamin/School/Perfiction/Frontend/perfiction/src/model/SignUp.js"],"names":["React","useState","useEffect","Spring","Nav","Navbar","auth","userService","styled","Styles","div","users","firstName","lastName","email","password","formValid","formErrors","rest","valid","Object","values","forEach","val","length","emailRegex","RegExp","SignUp","props","setUsers","fname","setFname","lname","setLname","setEmail","setPassword","getAll","then","data","handleSubmit","event","preventDefault","state","console","log","create","createdUser","concat","login","history","push","handleChange","target","name","value","test","opacity","duration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport userService from '../services/accounts';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n\n        &:hover {\n            color: #690505;\n        }\n    }\n\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    `;\n\nlet users = [\n  {\n    firstName: 'Benjamin',\n    lastName: 'Bow',\n    email: 'boy@com',\n    password: 'benjambo'\n  }\n];\n\n// Function to validate if input is acceptable\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate form if it isn't filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\n// An email validation code\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nexport const SignUp = props => {\n  const [users, setUsers] = useState([]);\n  const [fname, setFname] = useState('');\n  const [lname, setLname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    userService.getAll().then(data => {\n      setUsers(data);\n    });\n  }, []);\n\n  // The submit handler\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // If the format is valid print this to Console\n    if (formValid(this.state)) {\n      console.log(`\n            --SUBMITTING--\n            First Name: ${props.firstName}\n            Last Name: ${props.lastName}\n            Email: ${props.email}\n            Password: ${props.password}\n            `);\n\n      userService\n        .create({\n          firstName: props.firstName,\n          lastName: props.lastName,\n          email: props.email,\n          password: props.password\n        })\n        .then(createdUser => {\n          users.concat(createdUser);\n        });\n\n      auth.login(() => {\n        this.props.history.push('/home');\n      });\n    } else {\n      console.log('INVALID FORM - ERROR MESSAGE');\n    }\n    return;\n  };\n\n  // The Change handler\n  const handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let formErrors = props.formErrors;\n\n    // Swith statement for form input rules\n    switch (name) {\n      case 'firstName':\n        props.formErrors.firstName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'lastName':\n        props.formErrors.lastName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'email':\n        props.formErrors.email = emailRegex.test(value)\n          ? ''\n          : 'Invald email address';\n        break;\n\n      case 'password':\n        props.formErrors.password =\n          value.length < 6 ? 'minimum 6 characters required' : '';\n        break;\n      default:\n        break;\n    }\n    // setUsers({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n\n  return (\n    <Styles>\n      <Navbar expand=\"lg\" fixed=\"top\">\n        <Navbar.Brand>Perfiction</Navbar.Brand>\n        <Navbar.Toggle area-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Item>Welcome to Perfiction</Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ duration: 1250 }}\n      >\n        {props => (\n          <div style={props} className=\"wrapper\">\n            <div className=\"form-wrapper\">\n              <h1>Create Account</h1>\n              <form className=\"forms\" onSubmit={handleSubmit} noValidate>\n                <div className=\"firstName\">\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <input\n                    className={\n                      users.formErrors.firstName.length > 0 ? 'error' : null\n                    }\n                    placeholder=\"First Name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    noValidate\n                    onChange={handleChange}\n                  />\n                  {users.formErrors.firstName.length > 0 && (\n                    <span className=\"errorMessage\">\n                      {users.formErrors.firstName}\n                    </span>\n                  )}\n                </div>\n                <div className=\"lastName\">\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <input\n                    className=\"\"\n                    placeholder=\"Last Name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    noValidate\n                    onChange={handleChange}\n                  />\n                  {users.formErrors.lastName.length > 0 && (\n                    <span className=\"errorMessage\">\n                      {users.formErrors.lastName}\n                    </span>\n                  )}\n                </div>\n                <div className=\"email\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    className=\"\"\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    noValidate\n                    onChange={handleChange}\n                  />\n                  {users.formErrors.email.length > 0 && (\n                    <span className=\"errorMessage\">\n                      {users.formErrors.email}\n                    </span>\n                  )}\n                </div>\n                <div className=\"password\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    className=\"\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    noValidate\n                    onChange={handleChange}\n                  />\n                  {users.formErrors.password.length > 0 && (\n                    <span className=\"errorMessage\">\n                      {users.formErrors.password}\n                    </span>\n                  )}\n                </div>\n                <div className=\"createAccount\">\n                  <button type=\"submit\">Create Account</button>\n                  <a href=\"/\">\n                    <small>Already Have an Account?</small>\n                  </a>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </Spring>\n    </Styles>\n  );\n};\n\n/*export class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    // The state of the form to begin with\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    userService.getAll().then(initialUsers => {\n      users = initialUsers;\n      this.state({ users });\n    });\n  }\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const { formErrors } = this.state;\n\n  }\n}*/\n"]},"metadata":{},"sourceType":"module"}