{"ast":null,"code":"import _slicedToArray from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/benjamin/School/Perfiction/Frontend/perfiction/src/model/SignUp.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    .navbar {\\n        background-color: rgba(0,0,0,0.9);\\n    }\\n\\n    .navbar-default, .collapsed {\\n        border-color: white;\\n        background-color: white;\\n      }\\n      \\n      .navbar-default, .toggle{\\n       background-color: white;\\n      }\\n\\n    .navbar-brand, .navbar-nav .nav-link  {\\n        color white;\\n        margin: 2vh 2vw 2vh 2vw;\\n\\n        &:hover {\\n            color: #690505;\\n        }\\n    }\\n\\n    .nav-item {\\n      color white;\\n      margin: 2vh 2vw 2vh 2vw;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport userService from '../services/accounts';\nimport styled from 'styled-components';\nconst Styles = styled.div(_templateObject()); //Accounts\n\n/*let users = [\n  {\n    email: 'ben.bowo@gmail.com',\n    password: 'benjambo',\n    id: 0\n  }\n];*/\n// Function to validate if input is acceptable\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; // Validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // Validate form if it isn't filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n}; // An email validation code\n\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport const SignUp = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newEmail = _useState4[0],\n        setNewEmail = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newPassword = _useState6[0],\n        setNewPassword = _useState6[1]; // The state of the form to begin with\n\n\n  this.state = {\n    firstName: null,\n    lastName: null,\n    email: null,\n    password: null,\n    formErrors: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    }\n  }; // The submit handler\n\n  handleSubmit = event => {\n    event.preventDefault(); // If the format is valid print this to Console\n\n    if (formValid(this.state)) {\n      console.log(\"\\n            --SUBMITTING--\\n            First Name: \".concat(this.state.firstName, \"\\n            Last Name: \").concat(this.state.lastName, \"\\n            Email: \").concat(this.state.email, \"\\n            Password: \").concat(this.state.password, \"\\n            \"));\n      auth.login(() => {\n        this.props.history.push('/home');\n      });\n    } else {\n      console.log('INVALID FORM - ERROR MESSAGE');\n    }\n  }; // The Change handler\n\n\n  handleChange = event => {\n    event.preventDefault();\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    let formErrors = this.state.formErrors; // Swith statement for form input rules\n\n    switch (name) {\n      case 'firstName':\n        formErrors.firstName = value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'lastName':\n        formErrors.lastName = value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n        break;\n\n      case 'password':\n        formErrors.password = value.length < 6 ? 'minimum 6 characters required' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors,\n      [name]: value\n    }, () => console.log(this.state));\n  }; // Initializing formErrors property for it to be able to be used\n\n\n  const formErrors = this.state.formErrors;\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    expand: \"lg\",\n    fixed: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Perfiction\"), React.createElement(Navbar.Toggle, {\n    \"area-controls\": \"basic-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    className: \"ml-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Nav.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Welcome to Perfiction\")))), React.createElement(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    config: {\n      duration: 1250\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, props => React.createElement(\"div\", {\n    style: props,\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Create Account\"), React.createElement(\"form\", {\n    className: \"forms\",\n    onSubmit: this.handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    className: formErrors.firstName.length > 0 ? 'error' : null,\n    placeholder: \"First Name\",\n    type: \"text\",\n    name: \"firstName\",\n    noValidate: true,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, formErrors.firstName)), React.createElement(\"div\", {\n    className: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    className: \"\",\n    placeholder: \"Last Name\",\n    type: \"text\",\n    name: \"lastName\",\n    noValidate: true,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, formErrors.lastName)), React.createElement(\"div\", {\n    className: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    className: \"\",\n    placeholder: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    noValidate: true,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), formErrors.email.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, formErrors.email)), React.createElement(\"div\", {\n    className: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"\",\n    placeholder: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    noValidate: true,\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), formErrors.password.length > 0 && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, formErrors.password)), React.createElement(\"div\", {\n    className: \"createAccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Create Account\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Already Have an Account?\"))))))));\n};","map":{"version":3,"sources":["/Users/benjamin/School/Perfiction/Frontend/perfiction/src/model/SignUp.js"],"names":["React","Component","useState","useEffect","Spring","Nav","Navbar","auth","userService","styled","Styles","div","formValid","formErrors","rest","valid","Object","values","forEach","val","length","emailRegex","RegExp","SignUp","props","users","setUsers","newEmail","setNewEmail","newPassword","setNewPassword","state","firstName","lastName","email","password","handleSubmit","event","preventDefault","console","log","login","history","push","handleChange","target","name","value","test","setState","opacity","duration"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport userService from '../services/accounts';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n\n        &:hover {\n            color: #690505;\n        }\n    }\n\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    `;\n\n//Accounts\n/*let users = [\n  {\n    email: 'ben.bowo@gmail.com',\n    password: 'benjambo',\n    id: 0\n  }\n];*/\n\n// Function to validate if input is acceptable\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate form if it isn't filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\n// An email validation code\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nexport const SignUp = props => {\n  const [users, setUsers] = useState([]);\n  const [newEmail, setNewEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n  // The state of the form to begin with\n  this.state = {\n    firstName: null,\n    lastName: null,\n    email: null,\n    password: null,\n    formErrors: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    }\n  };\n\n  // The submit handler\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // If the format is valid print this to Console\n    if (formValid(this.state)) {\n      console.log(`\n            --SUBMITTING--\n            First Name: ${this.state.firstName}\n            Last Name: ${this.state.lastName}\n            Email: ${this.state.email}\n            Password: ${this.state.password}\n            `);\n      auth.login(() => {\n        this.props.history.push('/home');\n      });\n    } else {\n      console.log('INVALID FORM - ERROR MESSAGE');\n    }\n  };\n\n  // The Change handler\n  handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let formErrors = this.state.formErrors;\n\n    // Swith statement for form input rules\n    switch (name) {\n      case 'firstName':\n        formErrors.firstName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'lastName':\n        formErrors.lastName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n        break;\n\n      case 'password':\n        formErrors.password =\n          value.length < 6 ? 'minimum 6 characters required' : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n  // Initializing formErrors property for it to be able to be used\n  const { formErrors } = this.state;\n\n  return (\n    <Styles>\n      <Navbar expand=\"lg\" fixed=\"top\">\n        <Navbar.Brand>Perfiction</Navbar.Brand>\n        <Navbar.Toggle area-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Item>Welcome to Perfiction</Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ duration: 1250 }}\n      >\n        {props => (\n          <div style={props} className=\"wrapper\">\n            <div className=\"form-wrapper\">\n              <h1>Create Account</h1>\n              <form className=\"forms\" onSubmit={this.handleSubmit} noValidate>\n                <div className=\"firstName\">\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <input\n                    className={formErrors.firstName.length > 0 ? 'error' : null}\n                    placeholder=\"First Name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  {formErrors.firstName.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.firstName}</span>\n                  )}\n                </div>\n                <div className=\"lastName\">\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <input\n                    className=\"\"\n                    placeholder=\"Last Name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  {formErrors.lastName.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.lastName}</span>\n                  )}\n                </div>\n                <div className=\"email\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    className=\"\"\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  {formErrors.email.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.email}</span>\n                  )}\n                </div>\n                <div className=\"password\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    className=\"\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    noValidate\n                    onChange={this.handleChange}\n                  />\n                  {formErrors.password.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.password}</span>\n                  )}\n                </div>\n                <div className=\"createAccount\">\n                  <button type=\"submit\">Create Account</button>\n                  <a href=\"/\">\n                    <small>Already Have an Account?</small>\n                  </a>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </Spring>\n    </Styles>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}