{"ast":null,"code":"import _objectWithoutProperties from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/benjamin/School/Perfiction/Frontend/perfiction/src/model/SignUp.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    .navbar {\\n        background-color: rgba(0,0,0,0.9);\\n    }\\n\\n    .navbar-default, .collapsed {\\n        border-color: white;\\n        background-color: white;\\n      }\\n      \\n      .navbar-default, .toggle{\\n       background-color: white;\\n      }\\n\\n    .navbar-brand, .navbar-nav .nav-link  {\\n        color white;\\n        margin: 2vh 2vw 2vh 2vw;\\n\\n        &:hover {\\n            color: #690505;\\n        }\\n    }\\n\\n    .nav-item {\\n      color white;\\n      margin: 2vh 2vw 2vh 2vw;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport userService from '../services/accounts';\nimport db from '../db.json';\nimport styled from 'styled-components';\nconst Styles = styled.div(_templateObject());\nlet userArray = [{\n  firstName: 'Benjamin',\n  lastName: 'Bow',\n  email: 'boy@com',\n  password: 'benjambo'\n}]; // Function to validate if input is acceptable\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; // Validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // Validate form if it isn't filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n}; // An email validation code\n\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props); // The state of the form to begin with\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // If the format is valid print this to Console\n\n      if (formValid(this.state)) {\n        console.log(\"\\n            --SUBMITTING--\\n            First Name: \".concat(this.state.firstName, \"\\n            Last Name: \").concat(this.state.lastName, \"\\n            Email: \").concat(this.state.email, \"\\n            Password: \").concat(this.state.password, \"\\n            \"));\n        users.concat({\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        });\n        const _this$state = this.state,\n              users = _this$state.users,\n              newUser = _this$state.newUser;\n        this.setState({\n          users: [...users, newUser]\n        }, () => {\n          for (let val in newUser) {\n            newUser[val] = '';\n          }\n\n          this.state({\n            newUser\n          });\n        });\n        console.log(userArray);\n        /*userService\n          .create({\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n          })\n          .then(createdUser => {\n            users.concat(createdUser);\n          });*/\n\n        auth.login(() => {\n          this.props.history.push('/home');\n        });\n      } else {\n        console.log('INVALID FORM - ERROR MESSAGE');\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let formErrors = this.state.formErrors; // Swith statement for form input rules\n\n      switch (name) {\n        case 'firstName':\n          formErrors.firstName = value.length < 2 ? 'minimum 2 characters required' : '';\n          break;\n\n        case 'lastName':\n          formErrors.lastName = value.length < 2 ? 'minimum 2 characters required' : '';\n          break;\n\n        case 'email':\n          formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n          break;\n\n        case 'password':\n          formErrors.password = value.length < 6 ? 'minimum 6 characters required' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      users: userArray,\n      newUser: {\n        firstName: null,\n        lastName: null,\n        email: null,\n        password: null\n      },\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    }; //this.handleSubmit = this.handleSubmit.bind(this);\n    //this.handleChange = this.handleChange.bind(this);\n  } // The submit handler\n\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const formErrors = this.state.formErrors;\n    return React.createElement(Styles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      expand: \"lg\",\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Perfiction\"), React.createElement(Navbar.Toggle, {\n      \"area-controls\": \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Nav.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Welcome to Perfiction\")))), React.createElement(Spring, {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      config: {\n        duration: 1250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, props => React.createElement(\"div\", {\n      style: props,\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(\"form\", {\n      className: \"forms\",\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      className: formErrors.firstName.length > 0 ? 'error' : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, formErrors.firstName)), React.createElement(\"div\", {\n      className: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      className: formErrors.lastName.length > 0 ? 'error' : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, formErrors.lastName)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? 'error' : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? 'error' : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Already Have an Account?\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/benjamin/School/Perfiction/Frontend/perfiction/src/model/SignUp.js"],"names":["React","Component","Spring","Nav","Navbar","auth","userService","db","styled","Styles","div","userArray","firstName","lastName","email","password","formValid","formErrors","rest","valid","Object","values","forEach","val","length","emailRegex","RegExp","SignUp","constructor","props","handleSubmit","event","preventDefault","state","console","log","users","concat","newUser","setState","login","history","push","handleChange","target","name","value","test","render","opacity","duration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../components/auth';\nimport userService from '../services/accounts';\nimport db from '../db.json';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n\n        &:hover {\n            color: #690505;\n        }\n    }\n\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    `;\n\nlet userArray = [\n  {\n    firstName: 'Benjamin',\n    lastName: 'Bow',\n    email: 'boy@com',\n    password: 'benjambo'\n  }\n];\n\n// Function to validate if input is acceptable\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate form if it isn't filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\n// An email validation code\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    // The state of the form to begin with\n    this.state = {\n      users: userArray,\n      newUser: {\n        firstName: null,\n        lastName: null,\n        email: null,\n        password: null\n      },\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    };\n    //this.handleSubmit = this.handleSubmit.bind(this);\n    //this.handleChange = this.handleChange.bind(this);\n  }\n\n  // The submit handler\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // If the format is valid print this to Console\n    if (formValid(this.state)) {\n      console.log(`\n            --SUBMITTING--\n            First Name: ${this.state.firstName}\n            Last Name: ${this.state.lastName}\n            Email: ${this.state.email}\n            Password: ${this.state.password}\n            `);\n\n      users.concat({\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password\n      });\n\n      const { users, newUser } = this.state;\n      this.setState(\n        {\n          users: [...users, newUser]\n        },\n        () => {\n          for (let val in newUser) {\n            newUser[val] = '';\n          }\n          this.state({ newUser });\n        }\n      );\n      console.log(userArray);\n      /*userService\n        .create({\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        })\n        .then(createdUser => {\n          users.concat(createdUser);\n        });*/\n\n      auth.login(() => {\n        this.props.history.push('/home');\n      });\n    } else {\n      console.log('INVALID FORM - ERROR MESSAGE');\n    }\n  };\n\n  // The Change handler\n  handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let formErrors = this.state.formErrors;\n\n    // Swith statement for form input rules\n    switch (name) {\n      case 'firstName':\n        formErrors.firstName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'lastName':\n        formErrors.lastName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n        break;\n\n      case 'password':\n        formErrors.password =\n          value.length < 6 ? 'minimum 6 characters required' : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const { formErrors } = this.state;\n\n    return (\n      <Styles>\n        <Navbar expand=\"lg\" fixed=\"top\">\n          <Navbar.Brand>Perfiction</Navbar.Brand>\n          <Navbar.Toggle area-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Item>Welcome to Perfiction</Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Spring\n          from={{ opacity: 0 }}\n          to={{ opacity: 1 }}\n          config={{ duration: 1250 }}\n        >\n          {props => (\n            <div style={props} className=\"wrapper\">\n              <div className=\"form-wrapper\">\n                <h1>Create Account</h1>\n                <form className=\"forms\" onSubmit={this.handleSubmit} noValidate>\n                  <div className=\"firstName\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input\n                      className={\n                        formErrors.firstName.length > 0 ? 'error' : null\n                      }\n                      placeholder=\"First Name\"\n                      type=\"text\"\n                      name=\"firstName\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.firstName.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.firstName}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"lastName\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input\n                      className={\n                        formErrors.lastName.length > 0 ? 'error' : null\n                      }\n                      placeholder=\"Last Name\"\n                      type=\"text\"\n                      name=\"lastName\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.lastName.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.lastName}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"email\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      className={formErrors.email.length > 0 ? 'error' : null}\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.email.length > 0 && (\n                      <span className=\"errorMessage\">{formErrors.email}</span>\n                    )}\n                  </div>\n                  <div className=\"password\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      className={\n                        formErrors.password.length > 0 ? 'error' : null\n                      }\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.password.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.password}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"createAccount\">\n                    <button type=\"submit\">Create Account</button>\n                    <a href=\"/\">\n                      <small>Already Have an Account?</small>\n                    </a>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </Spring>\n      </Styles>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}