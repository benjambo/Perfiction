{"ast":null,"code":"import _objectWithoutProperties from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/benjamin/School/Perfiction/Frontend/perfiction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/benjamin/School/Perfiction/Frontend/perfiction/src/components/SignUp.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    .navbar {\\n        background-color: rgba(0,0,0,0.9);\\n    }\\n\\n    .navbar-default, .collapsed {\\n        border-color: white;\\n        background-color: white;\\n      }\\n      \\n      .navbar-default, .toggle{\\n       background-color: white;\\n      }\\n\\n    .navbar-brand, .navbar-nav .nav-link  {\\n        color white;\\n        margin: 2vh 2vw 2vh 2vw;\\n\\n        &:hover {\\n            color: #690505;\\n        }\\n    }\\n\\n    .nav-item {\\n      color white;\\n      margin: 2vh 2vw 2vh 2vw;\\n    }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../auth';\nimport styled from 'styled-components';\nconst Styles = styled.div(_templateObject()); // Function to validate if input is acceptable\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; // Validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // Validate form if it isn't filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n}; // An email validation code\n\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props); // The state of the form to begin with\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // If the format is valid print this to Console\n\n      if (formValid(this.state)) {\n        auth.login(() => {\n          this.props.history.push('/home');\n          console.log(auth.login);\n        });\n      } else {\n        console.log('INVALID FORM - ERROR MESSAGE');\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let formErrors = this.state.formErrors; // Swith statement for form input rules\n\n      switch (name) {\n        case 'firstName':\n          formErrors.firstName = value.length < 2 ? 'minimum 2 characters required' : '';\n          break;\n\n        case 'lastName':\n          formErrors.lastName = value.length < 2 ? 'minimum 2 characters required' : '';\n          break;\n\n        case 'email':\n          formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n          break;\n\n        case 'password':\n          formErrors.password = value.length < 6 ? 'minimum 6 characters required' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    };\n  } // The submit handler\n\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const formErrors = this.state.formErrors;\n    return React.createElement(Styles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      expand: \"lg\",\n      fixed: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Perfiction\"), React.createElement(Navbar.Toggle, {\n      \"area-controls\": \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Nav.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Welcome to Perfiction\")))), React.createElement(Spring, {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      config: {\n        duration: 1250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, props => React.createElement(\"div\", {\n      style: props,\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(\"form\", {\n      className: \"forms\",\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"input\", {\n      className: formErrors.firstName.length > 0 ? 'error' : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, formErrors.firstName)), React.createElement(\"div\", {\n      className: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(\"input\", {\n      className: \"\",\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, formErrors.lastName)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: \"\",\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: \"\",\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(\"a\", {\n      href: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Already Have an Account?\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/benjamin/School/Perfiction/Frontend/perfiction/src/components/SignUp.js"],"names":["React","Component","Spring","Nav","Navbar","auth","styled","Styles","div","formValid","formErrors","rest","valid","Object","values","forEach","val","length","emailRegex","RegExp","SignUp","constructor","props","handleSubmit","event","preventDefault","state","login","history","push","console","log","handleChange","target","name","value","firstName","lastName","email","test","password","setState","render","opacity","duration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport auth from '../auth';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: rgba(0,0,0,0.9);\n    }\n\n    .navbar-default, .collapsed {\n        border-color: white;\n        background-color: white;\n      }\n      \n      .navbar-default, .toggle{\n       background-color: white;\n      }\n\n    .navbar-brand, .navbar-nav .nav-link  {\n        color white;\n        margin: 2vh 2vw 2vh 2vw;\n\n        &:hover {\n            color: #690505;\n        }\n    }\n\n    .nav-item {\n      color white;\n      margin: 2vh 2vw 2vh 2vw;\n    }\n    `;\n\n// Function to validate if input is acceptable\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate form if it isn't filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\n// An email validation code\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    // The state of the form to begin with\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  // The submit handler\n  handleSubmit = event => {\n    event.preventDefault();\n\n    // If the format is valid print this to Console\n    if (formValid(this.state)) {\n      auth.login(() => {\n        this.props.history.push('/home');\n        console.log(auth.login);\n      });\n    } else {\n      console.log('INVALID FORM - ERROR MESSAGE');\n    }\n  };\n\n  // The Change handler\n  handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let formErrors = this.state.formErrors;\n\n    // Swith statement for form input rules\n    switch (name) {\n      case 'firstName':\n        formErrors.firstName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'lastName':\n        formErrors.lastName =\n          value.length < 2 ? 'minimum 2 characters required' : '';\n        break;\n\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Invald email address';\n        break;\n\n      case 'password':\n        formErrors.password =\n          value.length < 6 ? 'minimum 6 characters required' : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n\n  render() {\n    // Initializing formErrors property for it to be able to be used\n    const { formErrors } = this.state;\n\n    return (\n      <Styles>\n        <Navbar expand=\"lg\" fixed=\"top\">\n          <Navbar.Brand>Perfiction</Navbar.Brand>\n          <Navbar.Toggle area-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Item>Welcome to Perfiction</Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Spring\n          from={{ opacity: 0 }}\n          to={{ opacity: 1 }}\n          config={{ duration: 1250 }}\n        >\n          {props => (\n            <div style={props} className=\"wrapper\">\n              <div className=\"form-wrapper\">\n                <h1>Create Account</h1>\n                <form className=\"forms\" onSubmit={this.handleSubmit} noValidate>\n                  <div className=\"firstName\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input\n                      className={\n                        formErrors.firstName.length > 0 ? 'error' : null\n                      }\n                      placeholder=\"First Name\"\n                      type=\"text\"\n                      name=\"firstName\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.firstName.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.firstName}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"lastName\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input\n                      className=\"\"\n                      placeholder=\"Last Name\"\n                      type=\"text\"\n                      name=\"lastName\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.lastName.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.lastName}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"email\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      className=\"\"\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.email.length > 0 && (\n                      <span className=\"errorMessage\">{formErrors.email}</span>\n                    )}\n                  </div>\n                  <div className=\"password\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      className=\"\"\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      noValidate\n                      onChange={this.handleChange}\n                    />\n                    {formErrors.password.length > 0 && (\n                      <span className=\"errorMessage\">\n                        {formErrors.password}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"createAccount\">\n                    <button type=\"submit\">Create Account</button>\n                    <a href=\"/signin\">\n                      <small>Already Have an Account?</small>\n                    </a>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </Spring>\n      </Styles>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}